@model OMC2016.Models.Tools.ApplicationConfig
@{
    ViewBag.Title = "Config";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!--Page Header-->
<div class="row">
    <div class="col-lg-12">
        <h2 class="page-header">
            Application Configuration
        </h2>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
</div>

<!-- Nav tabs -->
<ul class="nav nav-tabs">
    <li class="active"><a href="#System" data-toggle="tab">System Infomation</a></li>
    <li><a href="#Account">Account Infomation</a></li>
</ul>

@using (Html.BeginForm("", "Administrator"))
{
    <!--Tab panes -->
    <div class="tab-content">

        <div id="System" class="tab-pane fade in active">
            <div class="form-horizontal">
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.SystemServer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:400px">
                        @Html.EditorFor(model => model.SystemServer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SystemServer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SystemDatabase, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:400px">
                        @Html.EditorFor(model => model.SystemDatabase, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SystemDatabase, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SystemUsername, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:400px">
                        @Html.EditorFor(model => model.SystemUsername, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SystemUsername, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SystemPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:400px">
                        @Html.EditorFor(model => model.SystemPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SystemPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Contiune" class="btn btn-default" name="Next" />
                    </div>
                </div>

            </div>
        </div>


        <div class="tab-pane fade" id="Account">
            <div class="form-horizontal">
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.AccuontServer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:400px">
                        @Html.EditorFor(model => model.AccuontServer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AccuontServer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AccuontDatabase, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:400px">
                        @Html.EditorFor(model => model.AccuontDatabase, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AccuontDatabase, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AccuontUsername, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:400px">
                        @Html.EditorFor(model => model.AccuontUsername, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AccuontUsername, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AccuontPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:400px">
                        @Html.EditorFor(model => model.AccuontPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AccuontPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" name="Publish" />
                    </div>
                </div>
            </div>

        </div>

    </div>
}




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@if (TempData["message"] != null)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $('.nav-tabs li:eq(1) a').tab('show')
        });
    </script>
}
